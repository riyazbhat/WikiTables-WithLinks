{
  "/wiki/ALGOL_60": "ALGOL 60 (short for Algorithmic Language 1960) is a member of the ALGOL family of computer programming languages.  It followed on from ALGOL 58 which had introduced code blocks and the begin and end pairs for delimiting them.  ALGOL 60 was the first language implementing nested function definitions with lexical scope.  It gave rise to many other programming languages, including CPL, Simula, BCPL, B, Pascal, and C.\n Niklaus Wirth based his own ALGOL W on ALGOL 60 before moving to develop Pascal. Algol-W was intended to be the next generation ALGOL but the ALGOL 68 committee decided on a design that was more complex and advanced rather than a cleaned simplified ALGOL 60. The official ALGOL versions are named after the year they were first published. Algol 68 is substantially different from Algol 60 and was criticised partially for being so, so that in general \"Algol\" refers to dialects of Algol 60.",
  "/wiki/COBOL": "COBOL (/\u02c8ko\u028ab\u0252l, -b\u0254\u02d0l/; an acronym for \"common business-oriented language\") is a compiled English-like computer programming language designed for business use. It is imperative, procedural and, since 2002, object-oriented. COBOL is primarily used in business, finance, and administrative systems for companies and governments. COBOL is still widely used in legacy applications deployed on mainframe computers, such as large-scale batch and transaction processing jobs. But due to its declining popularity and the retirement of experienced COBOL programmers, programs are being migrated to new platforms, rewritten in modern languages or replaced with software packages. Most programming in COBOL is now purely to maintain existing applications.\n COBOL was designed in 1959 by CODASYL and was partly based on previous programming language design work by Grace Hopper, commonly referred to as \"the (grand)mother of COBOL\". It was created as part of a US Department of Defense effort to create a portable programming language for data processing. It was originally seen as a stopgap, but the Department of Defense promptly forced computer manufacturers to provide it, resulting in its widespread adoption. It was standardized in 1968 and has since been revised four times. Expansions include support for structured and object-oriented programming. The current standard is ISO/IEC 1989:2014.\n COBOL statements have an English-like syntax, which was designed to be self-documenting and highly readable. However, it is verbose and uses over 300 reserved words. In contrast with modern, succinct syntax like y = x;, COBOL has a more English-like syntax (in this case, MOVE x TO y).\nCOBOL code is split into four divisions (identification, environment, data and procedure) containing a rigid hierarchy of sections, paragraphs and sentences. Lacking a large standard library, the standard specifies 43 statements, 87 functions and just one class.\n Academic computer scientists were generally uninterested in business applications when COBOL was created and were not involved in its design; it was (effectively) designed from the ground up as a computer language for business, with an emphasis on inputs and outputs, whose only data types were numbers and strings of text.\nCOBOL has been criticized throughout its life, for its verbosity, design process, and poor support for structured programming. These weaknesses result in monolithic and, though intended to be English-like, not easily comprehensible and verbose programs.",
  "/wiki/CODASYL": "CODASYL, the Conference/Committee on Data Systems Languages, was a consortium formed in 1959 to guide the development of a standard programming language that could be used on many computers. This effort led to the development of the programming language COBOL and other technical standards.\n CODASYL's members were individuals from industry and government involved in data processing activity.  Its larger goal was to promote more effective data systems analysis, design, and implementation.  The organization published specifications for various languages over the years, handing these over to official standards bodies (ISO, ANSI, or their predecessors) for formal standardization.",
  "/wiki/COMIT": "COMIT was the first string processing language (compare SNOBOL, TRAC, and Perl), developed on the IBM 700/7000 series computers by Dr. Victor Yngve and collaborators at MIT from 1957 to 1965.  Yngve created the language for supporting computerized research in the field of linguistics, and more specifically, the area of machine translation for natural language processing. The creation of COMIT led to the creation of SNOBOL.",
  "/wiki/Victor_Yngve": "Victor H. Yngve (July 5, 1920 \u2013 January 15, 2012) was professor of linguistics at the University of Chicago. He was one of the earliest researchers in computational linguistics and natural language processing, the use of computers to analyze and process languages. He created the first program to produce random but well-formed output sentences, given a text, a children's book called Engineer Small and the Little Train.\n Most importantly, he showed in computer processing terms why the human brain can only process sentences of a certain kind of complexity, ones that do not exceed a \"depth limit\" (which has nothing to do with length) of the kind established independently by George Miller with his depth limit of \"seven plus or minus two\" sentence constituents in memory at any given time.\n Yngve was also the author of COMIT, the first string processing language (compare SNOBOL, TRAC, and Perl), which was developed on the IBM 700/7000 series computers by Yngve and collaborators at MIT from 1957-1965. Yngve created the language for supporting computerized research in the field of linguistics, and more specifically, the area of machine translation for natural language processing.\n In his 1970 paper \"On Getting a Word in Edgewise\", Yngve coined the term 'back channel behavior' to describe the conversational phenomenon that to this day is known in the linguistic literature as back-channeling. According to Duncan, Yngve's paper also suggested the term turn-taking, independently of Erving Goffman (Duncan, 1972: 283).",
  "/wiki/Fortran": "Fortran (/\u02c8f\u0254\u02d0rtr\u00e6n/; formerly FORTRAN, derived from Formula Translation) is a general-purpose, compiled imperative programming language that is especially suited to numeric computation and scientific computing.\n Originally developed by IBM in the 1950s for scientific and engineering applications, FORTRAN came to dominate this area of programming early on and has been in continuous use for over six decades in computationally intensive areas such as numerical weather prediction, finite element analysis, computational fluid dynamics, computational physics, crystallography and computational chemistry. It is a popular language for high-performance computing and is used for programs that benchmark and rank the world's fastest supercomputers.\n Fortran encompasses a lineage of versions, each of which evolved to add extensions to the language while usually retaining compatibility with prior versions.  Successive versions have added support for structured programming\nand processing of character-based data (FORTRAN 77), array programming, modular programming and generic programming (Fortran 90), high performance Fortran (Fortran 95), object-oriented programming (Fortran 2003), concurrent programming (Fortran 2008), and native parallel computing capabilities (Coarray Fortran 2008/2018).\n Fortran's design was the basis for many other programming languages. Amongst the better-known is BASIC, which is based on FORTRAN II with a number of syntax cleanups, notably better logical structures, and other changes to work more easily in an interactive environment.",
  "/wiki/IBM": "The International Business Machines Corporation (IBM) is an American multinational information technology company headquartered in Armonk, New York, with operations in over 170 countries. The company began in 1911, founded in Endicott, New York, as the Computing-Tabulating-Recording Company (CTR) and was renamed \"International Business Machines\" in 1924. IBM is incorporated in New York.\n IBM produces and sells computer hardware, middleware and software, and provides hosting and consulting services in areas ranging from mainframe computers to nanotechnology. IBM is also a major research organization, holding the record for most U.S. patents generated by a business (as of 2020[update]) for 27 consecutive years. Inventions by IBM include the automated teller machine (ATM), the floppy disk, the hard disk drive, the magnetic stripe card, the relational database, the SQL programming language, the UPC barcode, and dynamic random-access memory (DRAM). The IBM mainframe, exemplified by the System/360, was the dominant computing platform during the 1960s and 1970s.\n IBM has continually shifted business operations by focusing on higher-value, more profitable markets. This includes spinning off printer manufacturer Lexmark in 1991 and the sale of personal computer (ThinkPad/ThinkCentre) and x86-based server businesses to Lenovo (in 2005 and 2014, respectively), and acquiring companies such as PwC Consulting (2002), SPSS (2009), The Weather Company (2016), and Red Hat (2019). Also in 2015, IBM announced that it would go \"fabless\", continuing to design semiconductors, but offloading manufacturing to GlobalFoundries.\n Nicknamed Big Blue, IBM is one of 30 companies included in the Dow Jones Industrial Average and one of the world's largest employers, with (as of 2018[update]) over 350,000 employees, known as \"IBMers\". At least 70% of IBMers are based outside the United States, and the country with the largest number of IBMers is India. IBM employees have been awarded five Nobel Prizes, six Turing Awards, ten National Medals of Technology (USA) and five National Medals of Science (USA).",
  "/wiki/APL_(programming_language)": "APL (named after the book A Programming Language) is a programming language developed in the 1960s by Kenneth E. Iverson. Its central datatype is the multidimensional array. It uses a large range of special graphic symbols to represent most functions and operators, leading to very concise code. It has been an important influence on the development of concept modeling, spreadsheets, functional programming, and computer math packages. It has also inspired several other programming languages.",
  "/wiki/Kenneth_E._Iverson": "Kenneth Eugene Iverson (17 December 1920 \u2013 19 October 2004) was a Canadian computer scientist noted for the development of the programming language APL. He was honored with the Turing Award in 1979 \"for his pioneering effort in programming languages and mathematical notation resulting in what the computing field now knows as APL; for his contributions to the implementation of interactive systems, to educational uses of APL, and to programming language theory and practice\".",
  "/wiki/Simula": "Simula is the name of two simulation programming languages, Simula I and Simula 67, developed in the 1960s at the Norwegian Computing Center in Oslo, by Ole-Johan Dahl and Kristen Nygaard. Syntactically, it is a fairly faithful superset of ALGOL 60,:1.3.1 also influenced by the design of Simscript.\n Simula 67 introduced objects,:2, 5.3 classes,:1.3.3, 2 inheritance and subclasses,:2.2.1 virtual procedures,:2.2.3 coroutines,:9.2 and discrete event simulation,:14.2 and features garbage collection.:9.1 Also other forms of subtyping (besides inheriting subclasses) were introduced in Simula derivatives.[citation needed]\n Simula is considered the first object-oriented programming language.[citation needed] As its name suggests, Simula was designed for doing simulations, and the needs of that domain provided the framework for many of the features of object-oriented languages today.\n Simula has been used in a wide range of applications such as simulating VLSI designs, process modeling, protocols, algorithms, and other applications such as typesetting, computer graphics, and education. The influence of Simula is often understated, and Simula-type objects are reimplemented in C++, Object Pascal, Java, C# and several other languages. Computer scientists such as Bjarne Stroustrup, creator of C++, and James Gosling, creator of Java, have acknowledged Simula as a major influence.",
  "/wiki/SNOBOL": "SNOBOL (\"StriNg Oriented and symBOlic Language\") is a series of computer programming languages developed between 1962 and 1967 at AT&T Bell Laboratories by David J. Farber, Ralph E. Griswold and Ivan P. Polonsky, culminating in SNOBOL4.  It was one of a number of text-string-oriented languages developed during the 1950s and 1960s; others included COMIT and TRAC.\n SNOBOL4 stands apart from most programming languages of its era by having patterns as a first-class data type (i.e. a data type whose values can be manipulated in all ways permitted to any other data type in the programming language) and by providing operators for pattern concatenation and alternation. SNOBOL4 patterns are a type of object and admit various manipulations, much like later object-oriented languages such as JavaScript whose patterns are known as regular expressions. In addition SNOBOL4 strings generated during execution can be treated as programs and either interpreted or compiled and executed (as in the eval function of other languages).\n SNOBOL4 was quite widely taught in larger US universities in the late 1960s and early 1970s and was widely used in the 1970s and 1980s as a text manipulation language in the humanities.\n In the 1980s and 1990s its use faded as newer languages such as AWK and Perl made string manipulation by means of regular expressions fashionable. SNOBOL4 patterns subsume BNF grammars, which are equivalent to context-free grammars and more powerful than regular expressions. \nThe \"regular expressions\" in current versions of AWK and Perl are in fact extensions of regular expressions in the traditional sense, but regular expressions, unlike SNOBOL4 patterns, are not recursive, which gives a distinct computational advantage to SNOBOL4 patterns. (Recursive expressions did appear in Perl 5.10, though, released in December 2007.)\n One of the designers of SNOBOL, Ralph Griswold, designed successors to SNOBOL4 called SL5 and Icon, which combined the backtracking of SNOBOL4 pattern matching with more standard ALGOL-like structuring, as well as adding some features of their own.",
  "/wiki/Ralph_Griswold": "Ralph E. Griswold (May 19, 1934, Modesto, CA \u2013 October 4, 2006, Tucson, AZ) was a computer scientist known for his research into high-level programming languages and symbolic computation. His language credits include the string processing language  SNOBOL, SL5, and Icon.\n He attended Stanford University, receiving a bachelor's degree in physics, then an M.S. and Ph.D. in electrical engineering. Griswold went to Bell Labs in 1962, where he studied ideas for non-numerical computation. SNOBOL was the outcome; it was a radically different language in its time and still is. He became the head of the Labs' Programming Research and Development department in 1967.\n In 1971, he was hired by the University of Arizona to be its first professor of computer science, subsequently organized the department, and was its head until 1981. While at Arizona, Griswold developed Icon.  The earlier Ratfor implementation of Icon was discarded and the language rewritten from scratch in C and UNIX.\n In 1990 Griswold was appointed Regents' Professor, and he retired in 1995. \"As one of the founders of the Bell Labs software culture that spawned UNIX, C, and many other essential contributions to modern software, Ralph Griswold brought to his academic research not only brilliance, but also experience and a value system that demanded that research ideas be tested by fire and proven useful and usable by real users, not just good-looking diagrams in academic papers.\"\n After his retirement, his interests turned to the mathematical aspects of weaving.\n Griswold died  on October 4, 2006, from cancer.\n Griswold's son, Bill Griswold, is also a computer scientist.",
  "/wiki/Combined_Programming_Language": "CPL (Combined Programming Language) is a multi-paradigm programming language, that was developed in the early 1960s.  It is an early ancestor of the C language via the BCPL and B languages.",
  "/wiki/Christopher_Strachey": "Christopher S. Strachey (/\u02c8stre\u026at\u0283i/; 16 November 1916 \u2013 18 May 1975) was a British computer scientist. He was one of the founders of denotational semantics, and a pioneer in programming language design. He was a member of the Strachey family, prominent in government, arts, administration, and academia.",
  "/wiki/ALGOL_68": "ALGOL 68 (short for Algorithmic Language 1968) is an imperative computer programming language that was conceived as a successor to the ALGOL 60 programming language, designed with the goal of a much wider scope of application and more rigorously defined syntax and semantics.\n The complexity of the language's definition, which runs to several hundred pages filled with non-standard terminology, made compiler implementation difficult and it was said it had \"no implementations and no users\". This was only partially true; ALGOL 68 did find use in a number of niche markets, notably in the United Kingdom where it was popular on International Computers Limited (ICL) machines, and in teaching roles. Outside these circles, use was relatively limited.\n Nevertheless, the contributions of ALGOL 68 to the field of computer science have been deep, wide-ranging and enduring, although many of these contributions were only publicly identified when they had reappeared in subsequently developed programming languages. Many languages were developed specifically as a response to the perceived complexity of the language, the most notable being Pascal, or were reimplementations for specific roles, like Ada.\n Many languages of the 1970s trace their design specifically to ALGOL 68, selecting some features while abandoning others that were considered too complex or out-of-scope for given roles. Among these is the language C, which was directly influenced by ALGOL 68, especially by its strong typing and structures. Most modern languages trace at least some of their syntax to either C or Pascal, and thus directly or indirectly to ALGOL 68.",
  "/wiki/Adriaan_van_Wijngaarden": "Adriaan \"Aad\" van Wijngaarden (2 November 1916 \u2013 7 February 1987) was a Dutch mathematician and computer scientist, who is considered by many to have been the founding father of informatica (computer science) in the Netherlands.\n Even though he was trained as an engineer, Van Wijngaarden would emphasize and promote the mathematical aspects of computing, first in numerical analysis, then in programming languages and finally in design principles of programming languages.",
  "/wiki/JOSS": "JOSS, an acronym for JOHNNIAC Open Shop System,[a] was one of the very first interactive, time-sharing programming languages. It pioneered a number of features that would become common in languages from the 1960s into the 1980s, including line numbers as both editing instructions and targets for branches, statements predicated by boolean decisions, and a built-in editor that can perform instructions in \"direct\" or \"immediate\" mode, a conversational user interface.\n JOSS was initially implemented on the JOHNNIAC machine at Rand Corporation and put online in 1963. It proved very popular, and the users quickly bogged the machine down. By 1964 a replacement was sought with higher performance. JOHNNIAC was retired in 1966 and replaced by a PDP-6, which ultimately grew to support hundreds of computer terminals based on the IBM Selectric. The terminals used green ink for user input and black for the computer's response. Any command that was not understood elicited the response \"Eh?\" or \"SORRY\".\n The system was highly influential, spawning a variety of ports and offshoots. Some remained similar to the original, like TELCOMP and STRINGCOMP, CAL, CITRAN, ISIS, PIL/I, JEAN (ICT 1900 series), AID (PDP-10); while others, such as FOCAL and MUMPS, developed in distinctive directions. It also bears a strong resemblance to the BASIC interpreters found on microcomputers in the 1980s, differing primarily in syntax details.",
  "/wiki/RAND_Corporation": "RAND Corporation (\"Research ANd Development\") is an American nonprofit global policy think tank created in 1948 by Douglas Aircraft Company to offer research and analysis to the United States Armed Forces. It is financed by the U.S. government and private endowment, corporations, universities and private individuals. The company has grown to assist other governments, international organizations, private companies and foundations, with a host of defense and non-defense issues, including healthcare. RAND aims for interdisciplinary and quantitative problem solving by translating theoretical concepts from formal economics and the physical sciences into novel applications in other areas, using applied science and operations research.",
  "/wiki/MIMIC": "MIMIC, known in capitalized form only, is a former simulation computer language developed 1964 by H. E. Petersen, F. J. Sansom and L. M. Warshawsky of Systems Engineering Group within the Air Force Materiel Command at the Wright-Patterson AFB in Dayton, Ohio, United States. It is an expression-oriented continuous block simulation language, but capable of incorporating blocks of FORTRAN-like algebra.\n MIMIC is a further development from MIDAS (Modified Integration Digital Analog Simulator), which represented analog computer design. Written completely in FORTRAN but one routine in COMPASS, and ran on Control Data supercomputers, MIMIC is capable of solving much larger simulation models.\n With MIMIC, ordinary differential equations describing mathematical models in several scientific disciplines as in engineering, physics, chemistry, biology, economics and as well as in social sciences can easily be solved by numerical integration and the results of the analysis are listed or drawn in diagrams. It also enables the analysis of nonlinear dynamic conditions.\n The MIMIC software package, written as FORTRAN overlay programs, executes input statements of the mathematical model in six consecutive passes. Simulation programs written in MIMIC are compiled rather than interpreted. The core of the simulation package is a variable step numerical integrator of fourth-order Runge-Kutta method. Many useful functions related to electrical circuit elements exist besides some mathematical functions found in most scientific programming languages. There is no need to sort the statements in order of dependencies of the variables, since MIMIC does it internally.\n Parts of the software organized in overlays are:",
  "/wiki/COWSEL": "COWSEL (COntrolled Working SpacE Language) is a programming language designed between 1964 and 1966 by Robin Popplestone. It was based on an RPN form of Lisp combined with some ideas from CPL.\n COWSEL was initially implemented on a Ferranti Pegasus computer at the University of Leeds and on a Stantec Zebra at the Bradford Institute of Technology; later, Rod Burstall implemented it on an Elliot 4120 at the University of Edinburgh.\n COWSEL was renamed POP-1 during the summer of 1966 and development continued under that name from then on.",
  "/wiki/Rod_Burstall": "Rodney Martineau \"Rod\" Burstall FRSE (born 1934) is a British computer scientist and one of four founders of the Laboratory for Foundations of Computer Science at the University of Edinburgh.",
  "/wiki/Robin_Popplestone": "Robin John Popplestone (9 December 1938 \u2013 14 April 2004) was a pioneer in the fields of machine intelligence and robotics. He is known for developing the COWSEL and POP programming languages, and for his work on Freddy II with Pat Ambler at the University of Edinburgh Artificial Intelligence laboratory.",
  "/wiki/PL/I": "PL/I (Programming Language One, pronounced /pi\u02d0 \u025bl w\u028cn/ and sometimes written PL/1) is a procedural, imperative computer programming language developed and published by IBM. It is designed for scientific, engineering, business and system programming.  It has been used by  academic, commercial and industrial organizations since it was introduced in the 1960s, and is still used.\n PL/I's main domains are data processing, numerical computation, scientific computing, and system programming. It supports recursion, structured programming, linked data structure handling, fixed-point, floating-point, complex, character string handling, and bit string handling. The language syntax is English-like and suited for describing complex data formats with a wide set of functions available to verify and manipulate them.",
  "/wiki/BASIC": "BASIC (Beginners' All-purpose Symbolic Instruction Code) is a family of general-purpose, high-level programming languages whose design philosophy emphasizes ease of use. The original version was designed by John G. Kemeny and Thomas E. Kurtz and released at Dartmouth College in 1964. They wanted to enable students in fields other than science and mathematics to use computers. At the time, nearly all use of computers required writing custom software, which was something only scientists and mathematicians tended to learn.\n In addition to the language itself, Kemeny and Kurtz developed the Dartmouth Time Sharing System (DTSS), which allowed multiple users to edit and run BASIC programs at the same time. This general model became very popular on minicomputer systems like the PDP-11 and Data General Nova in the late 1960s and early 1970s. Hewlett-Packard produced an entire computer line for this method of operation, introducing the HP2000 series in the late 1960s and continuing sales into the 1980s. Many early video games trace their history to one of these versions of BASIC.\n The emergence of early microcomputers in the mid-1970s led to the development of the original Microsoft BASIC in 1975. Due to the tiny main memory available on these machines, often 4\u00a0kB, a variety of Tiny BASIC dialects was also created. BASIC was available for almost any system of the era, and naturally became the de facto programming language for the home computer systems that emerged in the late 1970s. These machines almost always had a BASIC interpreter installed by default, often in the machine's firmware or sometimes on a ROM cartridge.\n BASIC fell from use during the later 1980s as newer machines with far greater capabilities came to market and other programming languages (such as Pascal and C) became tenable. In 1991, Microsoft released Visual Basic, combining a greatly updated version of BASIC with a visual forms builder. This reignited use of the language and \"VB\" remains a major programming language in the form of VB.NET.",
  "/wiki/John_George_Kemeny": "John George Kemeny (born Kem\u00e9ny J\u00e1nos Gy\u00f6rgy; May 31, 1926 \u2013 December 26, 1992) was a Hungarian-born American mathematician, computer scientist, and educator best known for co-developing the BASIC programming language in 1964 with Thomas E. Kurtz. Kemeny served as the 13th President of Dartmouth College from 1970 to 1981 and pioneered the use of computers in college education. Kemeny chaired the presidential commission that investigated the Three Mile Island accident in 1979. According to Gy\u00f6rgy Marx he was one of The Martians.",
  "/wiki/Thomas_Eugene_Kurtz": "Thomas Eugene Kurtz (born February 22, 1928) is a retired Dartmouth professor of mathematics and computer scientist, who along with his colleague John G. Kemeny set in motion the then revolutionary concept of making computers as freely available to college students as library books were, by implementing the concept of time-sharing at Dartmouth College. In his mission to allow non-expert users to interact with the computer, he co-developed the BASIC programming language (Beginners All-purpose Symbolic Instruction Code) and the Dartmouth Time Sharing System during 1963 to 1964.\n A native of Oak Park, Illinois, United States, Kurtz graduated from Knox College in 1950, and was awarded a Ph.D. degree from Princeton University in 1956, where his advisor was John Tukey, and joined the Mathematics Department of Dartmouth College that same year, where he taught statistics and numerical analysis.\n In 1983, Kurtz and Kemeny co-founded a company called True BASIC, Inc. to market True BASIC, an updated version of the language.\n Kurtz has also served as Council Chairman and Trustee of EDUCOM, as well as Trustee and Chairman of NERComP, and on the Pierce Panel of the President's Scientific Advisory Committee. Kurtz also served on the  steering committees for the CONDUIT project and the CCUC conferences on instructional computing.\n In 1974, the American Federation of Information Processing Societies gave an award to Kurtz and Kemeny at the National Computer Conference for their work on BASIC and time-sharing. In 1991, the Computer Society honored Kurtz with the IEEE Computer Pioneer Award and in 1994 he was inducted as a Fellow of the Association for Computing Machinery.",
  "/wiki/Dartmouth_College": "Dartmouth College (/\u02c8d\u0251\u02d0rtm\u0259\u03b8/ DART-m\u0259th) is a private Ivy League research university in Hanover, New Hampshire, United States. Established in 1769 by Eleazar Wheelock, it is the ninth-oldest institution of higher education in the United States and one of the nine colonial colleges chartered before the American Revolution. Although founded as a school to educate Native Americans in Christian theology and the English way of life, Dartmouth primarily trained Congregationalist ministers throughout its early history before it gradually secularized, emerging at the turn of the 20th century from relative obscurity into national prominence.\n Following a liberal arts curriculum, the university provides undergraduate instruction in 40 academic departments and interdisciplinary programs including 57 majors in the humanities, social sciences, natural sciences, and engineering, and enables students to design specialized concentrations or engage in dual degree programs. Dartmouth comprises five constituent schools: the original undergraduate college, the Geisel School of Medicine, the Thayer School of Engineering, the Tuck School of Business, and the Guarini School of Graduate and Advanced Studies. The university also has affiliations with the Dartmouth\u2013Hitchcock Medical Center, the Rockefeller Institute for Public Policy, and the Hopkins Center for the Arts. With a student enrollment of about 6,400, Dartmouth is the smallest university in the Ivy League. Undergraduate admissions are highly competitive, with an acceptance rate of 7.9% for the Class of 2023.\n Situated on a terrace above the Connecticut River, Dartmouth's 269-acre main campus is in the rural Upper Valley region of New England. The university functions on a quarter system, operating year-round on four ten-week academic terms. Dartmouth is known for its undergraduate focus, strong Greek culture, and wide array of enduring campus traditions. Its 34 varsity sports teams compete intercollegiately in the Ivy League conference of the NCAA Division I.\n Dartmouth is consistently included among the highest-ranked universities in the United States by several institutional rankings, and has been cited as a leading university for undergraduate teaching and research by U.S. News & World Report. In 2018, the Carnegie Classification of Institutions of Higher Education listed Dartmouth as the only \"majority-undergraduate\", \"arts-and-sciences focused\", \"doctoral university\" in the country that has \"some graduate coexistence\" and \"very high research activity\".\n In its history, the university has produced many prominent alumni, including 170 members of the U.S. Senate and the U.S. House of Representatives, 24 U.S. governors, 10 billionaire alumni, 10 U.S. Cabinet secretaries, 3 Nobel Prize laureates, 2 U.S. Supreme Court justices, and a U.S. vice president. Other notable alumni include 79 Rhodes Scholars, 26 Marshall Scholarship recipients, 13 Pulitzer Prize winners, and numerous MacArthur Genius fellows, Fulbright Scholars, CEOs and founders of Fortune 500 corporations, high-ranking U.S. diplomats, scholars in academia, literary and media figures, professional athletes, and Olympic medalists.",
  "/wiki/IBM_RPG": "RPG is a high-level programming language (HLL) for business applications. RPG is an IBM proprietary programming language and its later versions are available only on IBM i- or OS/400-based systems.\n It has a long history, having been developed by IBM in 1959 as the Report Program Generator\u00a0\u2014 a tool to replicate punched card processing on the IBM 1401\u00a0\u2014  then updated to RPG II for the IBM System/3 in the late 1960s, and since evolved into an HLL equivalent to COBOL and PL/I.\n It remains a popular programming language on the IBM i operating system, which runs on IBM Power platform hardware.  The current version, RPG IV, a.k.a. ILE RPG, provides a modern programming environment.",
  "/wiki/MARK_IV_(software)": "MARK IV is a fourth-generation programming language that was created by Informatics, Inc.  in the 1960s. Informatics took advantage of IBM's decision to unbundle their software; MARK IV was the first \"software product to have cumulative sales of $10 million\".\n MARK IV was developed for IBM Systems (360 and 370) and for the RCA Spectra 70. Its main benefit was allowing faster application development on the order of 6 to 10 times faster than doing a system using a 3GL, such as COBOL. MARK IV, being an early 4GL, allowed user development of systems related to business. In a 1971 ad by Informatics, there are several quotes from customers, such as:",
  "/wiki/Sterling_Software": "Sterling Software was an American software company founded in Dallas, Texas in 1981 by Sterling Williams and brothers Sam and Charles Wyly.  The company was acquired by Computer Associates International in 2000 in a stock-for-stock transaction worth $3.3 billion.\nComputer Associates sold Sterling Software's Federal Systems Group to Northrop Grumman in 2000.\n\n It was known for its aggressive acquisitions, most notably the hostile take-over of Informatics General Corporation in 1985.\n Informatics was one of the first established software and services companies. It developed the MARK-IV Fourth-generation programming language in the 1960s.  MARK-IV became the first software package exceeding $1 million in  revenue, after IBM was forced in 1969 to unbundle software from their hardware.\n Helped by financing and counseled by Werner Frank, one of Informatics' founders who had left this company a year before, Sterling Software started the hostile take over by offering to shareholders an interesting price per share and increasing it slowly until the Informatics board was no longer able to reject it.\nOvernight, Sterling Software became a $200 million in revenue company up from $20 million. \nAfter only 2 years, they started again acquiring new companies.\n Acquired Reston, VA-based Systems Center, Inc. in 1993 in a stock-for stock transaction worth $185 million, Sterling Software's 20th acquisition.  In the process of this acquisition, Sterling Software was completely restructured along lines of business, as opposed to the previous practice of absorbing acquired companies as essentially equivalent divisions.[citation needed]\n Acquired Atlanta-based KnowledgeWare in a stock-for-stock transaction worth $74 million in 1994, in the process eliminating about 250 jobs in the combined companies.  KnowledgeWare's founder Fran Tarkenton joined the Sterling Software board of directors as part of the deal.\n Acquired Texas Instruments's Dallas-based software division (known as TI Software) for $165 million cash in 1997, about 66% of its previous year's revenue.  The acquisition included the rights to CA Gen.[citation needed]\n Acquired Boston-based Cayenne Software for $11.4 million in cash in 1998, Sterling Software's 30th acquisition.\n Acquired Fremont, California-based Interlink Computer Sciences in 1999 for $64 million in cash, merging Interlink into Sterling's existing Network Management Division.",
  "/wiki/Speakeasy_(computational_environment)": "Speakeasy is a numerical computing interactive environment also featuring an interpreted programming language. It was initially developed for internal use at the Physics Division of Argonne National Laboratory by the theoretical physicist Stanley Cohen. He eventually founded Speakeasy Computing Corporation to make the program available commercially.\n Speakeasy is a very long-lasting numerical package. In fact, the original version of the environment was built around a core dynamic data repository called \"Named storage\" developed in the early 1960s, while the most recent version has been released in 2006.\n Speakeasy was aimed to make the computational work of the physicists at the Argonne National Laboratory easier. It was initially conceived to work on mainframes (the only kind of computers at that time), and was subsequently ported to new platforms (minicomputers, personal computers) as they became available. The porting of the same code on different platforms was made easier by using Mortran metalanguage macros to face systems dependencies and compilers deficiencies and differences. Speakeasy is currently available on several platforms: PCs running Windows, macOS, Linux, departmental computers and workstations running several flavors of Linux, AIX or Solaris.\n Speakeasy was also among the first[citation needed] interactive numerical computing environments, having been implemented in such a way on a CDC 3600 system, and later on IBM TSO machines as one was in beta-testing at the Argonne National Laboratory at the time.\n Almost since the beginning (as the dynamic linking functionality was made available in the operating systems) Speakeasy features the capability of expanding its operational vocabulary using separated modules, dynamically linked to the core processor as they are needed. For that reason such modules  were called \"linkules\" (LINKable-modULES). They are functions with a generalized interface, which can be written in  FORTRAN or in C.[citation needed]\nThe independence of each of the new modules from the others and from the main processor is of great help in improving the system, especially it was in the old days.\n This easy way of expanding the functionalities of the main processor was often exploited by the users to develop their own specialized packages. Besides the programs, functions and subroutines the user can write in the Speakeasy's own interpreted language, linkules add functionalities carried out with the typical performances of compiled programs.\n Among the packages developed by the users, one of the most important is \"Modeleasy\", originally developed as \"FEDeasy\" in the early 1970s at the research department of the Federal Reserve Board of Governors in Washington D.C..\nModeleasy implements special objects and functions for large econometric models estimation and simulation.\nIts evolution led eventually to its distribution as an independent product.",
  "/wiki/Argonne_National_Laboratory": "Argonne National Laboratory is a science and engineering research national laboratory operated by the University of Chicago Argonne LLC for the United States Department of Energy located in Lemont, Illinois, outside Chicago. It is the largest national laboratory by size and scope in the Midwest.\n Argonne was initially formed to carry out Enrico Fermi's work on nuclear reactors as part of the Manhattan Project, and it was designated as the first national laboratory in the United States on July 1, 1946. In the post-war era the lab focused primarily on non-weapon related nuclear physics, designing and building the first power-producing nuclear reactors, helping design the reactors used by the USA's nuclear navy, and a wide variety of similar projects. In 1994, the lab's nuclear mission ended, and today it maintains a broad portfolio in basic science research, energy storage and renewable energy, environmental sustainability, supercomputing, and national security.\n UChicago Argonne, LLC, the operator of the laboratory, \"brings together the expertise of the University of Chicago (the sole member of the LLC) with Jacobs Engineering Group Inc.\" Argonne is a part of the expanding Illinois Technology and Research Corridor. Argonne formerly ran a smaller facility called Argonne National Laboratory-West (or simply Argonne-West) in Idaho next to the Idaho National Engineering and Environmental Laboratory. In 2005, the two Idaho-based laboratories merged to become the Idaho National Laboratory.",
  "/wiki/TRAC_(programming_language)": "TRAC (for Text Reckoning And Compiling) Language is a programming language developed between 1959-1964 by Calvin Mooers and implemented on a PDP-10 in 1964 by L. Peter Deutsch. It was one of three \"first languages\" recommended by Ted Nelson in Computer Lib. TRAC T64 was used until at least 1984, when Mooers updated it to TRAC T84.",
  "/wiki/Calvin_Mooers": "Calvin Northrup Mooers (October 24, 1919 \u2013 December 1, 1994), was an American computer scientist known for his work in information retrieval and for the programming language TRAC.",
  "/wiki/P\u2032\u2032": "P\u2032\u2032 (P double prime) is a primitive computer programming language created by Corrado B\u00f6hm in 1964 to describe a family of Turing machines.",
  "/wiki/Corrado_B\u00f6hm": "Corrado B\u00f6hm (17 January 1923 \u2013 23 October 2017) was a Professor Emeritus at the University of Rome \"La Sapienza\" and a computer scientist known especially for his contributions to the theory of structured programming, constructive mathematics, combinatory logic, lambda calculus, and the semantics and implementation of functional programming languages.",
  "/wiki/Timeline_of_programming_languages": "This is a record of historically important programming languages, by decade."
}