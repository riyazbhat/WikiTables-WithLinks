{
  "/wiki/Software_license": "A software license is a legal instrument (usually by way of contract law, with or without printed material) governing the use or redistribution of software. Under United States copyright law, all software is copyright protected, in both source code and object code forms, unless that software was developed by the United States Government, in which case it cannot be copyrighted. Authors of copyrighted software can donate their software to the public domain, in which case it is also not covered by copyright and, as a result, cannot be licensed. \n A typical software license grants the licensee, typically an end-user, permission to use one or more copies of software in ways where such a use would otherwise potentially constitute copyright infringement of the software owner's exclusive rights under copyright.",
  "/wiki/Instruction_set": "An instruction set architecture (ISA) is an abstract model of a computer. It is also referred to as architecture or computer architecture. A realization of an ISA, such as a central processing unit (CPU), is called an implementation. In general, an ISA defines the supported data types, the registers, the hardware support for managing main memory fundamental features (such as the memory consistency, addressing modes, virtual memory), and the input/output model of a family of implementations of the ISA. An ISA specifies the behavior of machine code running on implementations of that ISA in a fashion that does not depend on the characteristics of that implementation, providing binary compatibility between implementations. This enables multiple implementations of an ISA that differ in performance, physical size, and monetary cost (among other things), but that are capable of running the same machine code, so that a lower-performance, lower-cost machine can be replaced with a higher-cost, higher-performance machine without having to replace software. It also enables the evolution of the microarchitectures of the implementations of that ISA, so that a newer, higher-performance implementation of an ISA can run software that runs on previous generations of implementations. If an operating system maintains a standard and compatible application binary interface (ABI) for a particular ISA, machine code for that ISA and operating system will run on future implementations of that ISA and newer versions of that operating system.",
  "/wiki/Computing_platform": "A computing platform or digital platform is the environment in which a piece of software is executed. It may be the hardware or the operating system (OS), even a web browser and associated application programming interfaces, or other underlying software, as long as the program code is executed with it. Computing platforms have different abstraction levels, including a computer architecture, an OS, or runtime libraries. A computing platform is the stage on which computer programs can run.\n A platform can be seen both as a constraint on the software development process, in that different platforms provide different functionality and restrictions; and as an assistant to the development process, in that they provide low-level functionality ready-made.  For example, an OS may be a platform that abstracts the underlying differences in hardware and provides a generic command for saving files or accessing the network.",
  "/wiki/Multics": "Multics (Multiplexed Information and Computing Service) is an influential early time-sharing operating system which is based on the concept of a single-level memory. Virtually all modern operating systems were heavily influenced by Multics \u2013 often through Unix, which was created by some of the people who had worked on Multics \u2013 either directly (Linux and macOS) or indirectly (Windows NT).[citation needed]",
  "/wiki/MIT_License": "The MIT License is a permissive free software license originating at the Massachusetts Institute of Technology (MIT) in the late 1980s. As a permissive license, it puts only very limited restriction on reuse and has, therefore, reasonable license compatibility. \n It is compatible because it can be re-licensed under other licenses. The MIT license is compatible with many copyleft licenses, such as the GNU General Public License (GPL); MIT licensed software can be re-licensed as GPL software, and integrated with other GPL software, but not the other way around. The MIT license also permits reuse within proprietary software, provided that either all copies of the licensed software include a copy of the MIT License terms and the copyright notice, or the software is re-licensed to remove this requirement. MIT-licensed software can also be re-licensed as proprietary software, which distinguishes it from copyleft software licenses.\n As of 2015[update], MIT was the most popular software license on GitHub, ahead of any GPL variant and other free and open-source software (FOSS) licenses. Notable projects that use the MIT License include the X Window System, Ruby on Rails, and Node.js.",
  "/wiki/GE-645": "The 600 series used 36-bit words and 18-bit addresses. They had two 36-bit accumulators, eight 18-bit index registers, and one 8-bit exponent register. \nIt supported floating point in both 36-bit single-precision and 2 x 36-bit double precision, the exponent being stored separately, allowing up to 71 bits of precision (one bit being used for the sign). It had an elaborate set of addressing modes, many of which used indirect words, some of which were auto-incrementing or auto-decrementing. It supported 6-bit and 9-bit bytes through addressing modes; these supported extracting specific bytes, and incrementing the byte pointer, but not random access to bytes.\n It also included a number of channel controllers for handling I/O. The CPU could hand off short programs written in the channel controller's own machine language, which would then process the data, move it to or from the memory, and raise an interrupt when they completed. This allowed the main CPU to move on to other tasks while waiting for the slow I/O to complete, a primary feature of time sharing systems.",
  "/wiki/Honeywell_6180": "The Honeywell 6000 series computers were rebadged versions of General Electric's 600-series mainframes manufactured by Honeywell International, Inc. from 1970 to 1989. Honeywell acquired the line when it purchased GE's computer division in 1970 and continued to develop them under a variety of names for many years. The high-end model was the 6080, with performance approximately 1 MIPS. Smaller models were the 6070,  6060, 6050, 6040, and 6030. In 1973 a low-end 6025 was introduced. The even-numbered models included an Enhanced Instruction Set feature (EIS), which added decimal arithmetic and storage-to-storage operations to the original word-oriented architecture. In 1973 Honeywell introduced the 6180, a 6000-series machine with addressing modifications to support the Multics operating system. In 1974 Honeywell released the 68/80 which added cache memory in each processor and support for a large (2-8 million word) directly addressable memory.",
  "/wiki/AVR_microcontrollers": "AVR is a family of microcontrollers developed since 1996 by Atmel, acquired by Microchip Technology in 2016. These are modified Harvard architecture 8-bit RISC single-chip microcontrollers. AVR was one of the first microcontroller families to use on-chip flash memory for program storage, as opposed to one-time programmable ROM, EPROM, or EEPROM used by other microcontrollers at the time.\n AVR microcontrollers find many applications as embedded systems. They are especially common in hobbyist and educational embedded applications, popularized by their inclusion in many of the Arduino line of open hardware development boards.",
  "/wiki/Intel_MCS-51": "The Intel MCS-51 (commonly termed 8051) is a single chip microcontroller (MCU) series developed by Intel in 1980 for use in embedded systems. The architect of the instruction set of the Intel MCS-51 was John H. Wharton. Intel's original versions were popular in the 1980s and early 1990s and enhanced binary compatible derivatives remain popular today. It is an example of a complex instruction set computer,  and has separate memory spaces for program instructions and data. Intel's original MCS-51 family was developed using N-type metal-oxide-semiconductor (NMOS) technology like its predecessor Intel MCS-48, but later versions, identified by a letter C in their name (e.g., 80C51) used complementary metal\u2013oxide\u2013semiconductor (CMOS) technology and consume less power than their NMOS predecessors. This made them more suitable for battery-powered devices. The family was continued in 1996 with the enhanced 8-bit MCS-151 and the 8/16/32-bit MCS-251 family of binary compatible microcontrollers. While Intel no longer manufactures the MCS-51, MCS-151 and MCS-251 family, enhanced binary compatible derivatives made by numerous vendors remain popular today.",
  "/wiki/Intel_8086": "The 8086 (also called iAPX 86) is a 16-bit microprocessor chip designed by Intel between early 1976 and June 8, 1978, when it was released. The Intel 8088, released July 1, 1979, is a slightly modified chip with an external 8-bit data bus (allowing the use of cheaper and fewer supporting ICs),[note 1] and is notable as the processor used in the original IBM PC design.\n The 8086 gave rise to the x86 architecture, which eventually became Intel's most successful line of processors. On June 5, 2018, Intel released a limited-edition CPU celebrating the anniversary of the  Intel 8086, called the Intel Core i7-8086K.",
  "/wiki/Intel_80186": "The Intel 80186, also known as the iAPX 186, or just 186, is a microprocessor and microcontroller introduced in 1982. It was based on the Intel 8086 and, like it, had a 16-bit external data bus multiplexed with a 20-bit address bus. It was also available as the 80188, with an 8-bit external data bus.",
  "/wiki/Motorola_68000_series": "The Motorola 68000 series (also termed 680x0, m68000, m68k, or 68k) is a family of 32-bit CISC microprocessors. During the 1980s and early 1990s, they were popular in personal computers and workstations and were the primary competitors of Intel's x86 microprocessors. They were most well known as the processors powering the early Apple Macintosh, the Sharp X68000, the Commodore Amiga, the Sinclair QL, the Atari ST, the SNK NG AES/Neo Geo CD, the Sega Genesis (Mega Drive), Atari Jaguar and Commodore CDTV. Although no modern desktop computers are based on processors in the 68000 series, derivative processors are still widely used in embedded systems.\n Motorola ceased development of the 68000 series architecture in 1994, replacing it with the PowerPC architecture, which was developed in conjunction with IBM and Apple Computer as part of the AIM alliance.",
  "/wiki/Motorola_6800": "The 6800 (sixty-eight hundred) is an 8-bit microprocessor designed and first manufactured by Motorola in 1974. The MC6800 microprocessor was part of the M6800 Microcomputer System that also included serial and parallel interface ICs, RAM, ROM and other support chips. A significant design feature was that the M6800 family of ICs required only a single five-volt power supply at a time when most other microprocessors required three voltages. The M6800 Microcomputer System was announced in March 1974 and was in full production by the end of that year. The 6800 has a 16-bit address bus that can directly access 64 kB of memory and an 8-bit bi-directional data bus. It has 72 instructions with seven addressing modes for a total of 197 opcodes. The original MC6800 could have a clock frequency of up to 1 MHz. Later versions had a maximum clock frequency of 2 MHz.",
  "/wiki/MOS_Technology_6502": "The MOS Technology 6502 (typically sixty-five-oh-two or six-five-oh-two) is an 8-bit microprocessor that was designed by a small team led by Chuck Peddle for MOS Technology. When it was introduced in 1975, the 6502 was, by a considerable margin, the least expensive microprocessor on the market. It initially sold for less than one-sixth the cost of competing designs from larger companies, such as Motorola and Intel. Its introduction caused rapid decreases in pricing across the entire processor market. Along with the Zilog Z80, it sparked a series of projects that resulted in the home computer revolution of the early 1980s. Popular home video game consoles and computers, such as the Atari 2600, Atari 8-bit family, Apple II, Nintendo Entertainment System, Commodore 64, Atari Lynx, BBC Micro and others, used the 6502 or variations of the basic design. Soon after the 6502's introduction, MOS Technology was purchased outright by Commodore International, who continued to sell the microprocessor and licenses to other manufacturers. In the early days of the 6502, it was second-sourced by Rockwell and Synertek, and later licensed to other companies.",
  "/wiki/Zilog_Z80": "The Z80 is an 8-bit microprocessor introduced by Zilog as the startup company's first product. The Z80 was conceived by Federico Faggin in late 1974 and developed by him and his 11 employees starting in early 1975. The first working samples were delivered in March 1976, and it was officially introduced on the market in July 1976. With the revenue from the Z80, the company built its own chip factories and grew to over a thousand employees over the following two years. The Zilog Z80 is a software-compatible extension and enhancement of the Intel 8080 and, like it, was mainly aimed at embedded systems. Although used in that role, the Z80 also became one of the most widely used CPUs in desktop computers and home computers from the 1970s to the mid-1980s. It was also common in military applications, musical equipment such as synthesizers, and coin operated arcade games of the late 1970s and early 1980s including Pac-Man. Zilog licensed the Z80 to the US-based Synertek and Mostek, which had helped them with initial production, as well as to a European second source manufacturer, SGS.",
  "/wiki/Win32": "The Windows API, informally WinAPI, is Microsoft's core set of application programming interfaces (APIs) available in the Microsoft Windows operating systems. The name Windows API collectively refers to several different platform implementations that are often referred to by their own names (for example, Win32 API); see the versions section. Almost all Windows programs interact with the Windows API. On the Windows NT line of operating systems, a small number (such as programs started early in the Windows startup process) use the Native API. Developer support is available in the form of a software development kit, Microsoft Windows SDK, providing documentation and tools needed to build software based on the Windows API and associated Windows interfaces. The Windows API (Win32) is focused mainly on the programming language C in that its exposed functions and data structures are described in that language in recent versions of its documentation. However, the API may be used by any programming language compiler or assembler able to handle the (well-defined) low-level data structures along with the prescribed calling conventions for calls and callbacks. Similarly, the internal implementation of the API's function has been developed in several languages, historically.",
  "/wiki/Linux": "Linux (/\u02c8l\u026an\u0259ks/ (listen) LIN-\u0259ks) is a family of open source Unix-like operating systems based on the Linux kernel, an operating system kernel first released on September 17, 1991, by Linus Torvalds. Linux is typically packaged in a Linux distribution. Distributions include the Linux kernel and supporting system software and libraries, many of which are provided by the GNU Project. Many Linux distributions use the word Linux in their name, but the Free Software Foundation uses the name GNU/Linux to emphasize the importance of GNU software, causing some controversy. Popular Linux distributions include Debian, Fedora, and Ubuntu. Commercial distributions include Red Hat Enterprise Linux and SUSE Linux Enterprise Server. Desktop Linux distributions include a windowing system such as X11 or Wayland, and a desktop environment such as GNOME or KDE Plasma. Distributions intended for servers may omit graphics altogether, or include a solution stack such as LAMP.",
  "/wiki/Babbage_(programming_language)": "Babbage is the high level assembly language for the GEC 4000 series minicomputers.  It was named after Charles Babbage, an English computing pioneer.",
  "/wiki/Proprietary_software": "Proprietary software, also known as closed-source software, is non-free computer software for which the software's publisher or another person retains intellectual property rights\u2014usually copyright of the source code, but sometimes patent rights.",
  "/wiki/GEC_4000_series": "The GEC 4000 was a series of 16/32-bit minicomputers produced by GEC Computers Ltd. of the UK during the 1970s, 1980s and early 1990s.",
  "/wiki/COMPASS": "COMPASS, COMPrehensive ASSembler, is any of a family of macro assembly languages on Control Data Corporation's 3000 series, and on the 60-bit CDC 6000 series, 7600 and Cyber 70 and 170 series mainframe computers. While the architectures are very different, the macro and conditional assembly facilities are similar.",
  "/wiki/Control_Data_Corporation": "Control Data Corporation (CDC) was a mainframe and supercomputer firm. CDC was one of the nine major United States computer companies through most of the 1960s; the others were IBM, Burroughs Corporation, DEC, NCR, General Electric, Honeywell, RCA, and UNIVAC. CDC was well-known and highly regarded throughout the industry at the time. For most of the 1960s, Seymour Cray worked at CDC and developed a series of machines that were the fastest computers in the world by far, until Cray left the company to found Cray Research (CRI) in the 1970s. After several years of losses in the early 1980s, in 1988 CDC started to leave the computer manufacturing business and sell the related parts of the company, a process that was completed in 1992 with the creation of Control Data Systems, Inc. The remaining businesses of CDC currently operate as Ceridian.",
  "/wiki/MACRO-10": "MACRO-10 is an assembly language with extensive macro facilities for DEC's PDP-10-based Mainframe computer systems, the DECsystem-10 and the DECSYSTEM-20. MACRO-10 is implemented as a two-pass assembler.",
  "/wiki/PDP-10": "Digital Equipment Corporation (DEC)'s PDP-10, later marketed as the DECsystem-10, is a mainframe computer family manufactured beginning in 1966 and discontinued in 1983. 1970s models and beyond were marketed under the DECsystem-10 name, especially as the TOPS-10 operating system became widely used.\n The PDP-10's architecture is almost identical to that of DEC's earlier PDP-6, sharing the same 36-bit word length and slightly extending the instruction set (but with improved hardware implementation). Some aspects of the instruction set are unusual, most notably the byte instructions, which operated on bit fields of any size from 1 to 36 bits inclusive, according to the general definition of a byte as a contiguous sequence of a fixed number of bits.\n The PDP-10 is the machine that made time-sharing common, and this and other features made it a common fixture in many university computing facilities and research labs during the 1970s, the most notable being Harvard University's Aiken Computation Laboratory, MIT's AI Lab and Project MAC, Stanford's SAIL, Computer Center Corporation (CCC), ETH (ZIR), and Carnegie Mellon University. Its main operating systems, TOPS-10 and TENEX, were used to build out the early ARPANET. For these reasons, the PDP-10 looms large in early hacker folklore.\n Projects to extend the PDP-10 line were eclipsed by the success of the unrelated VAX superminicomputer, and the cancellation of the PDP-10 line was announced in 1983.",
  "/wiki/MACRO-11": "MACRO-11 is an assembly language with macro facilities for PDP-11 minicomputers from Digital Equipment Corporation (DEC).  It is the successor to PAL-11 (Program Assembler Loader), an earlier version of the PDP-11 assembly language without macro facilities.\n The MACRO-11 assembly language was designed for the PDP-11 minicomputer family.  It was supported on all DEC PDP-11 operating systems. PDP-11 Unix systems also include an assembler (called as), structurally similar to MACRO-11 but with different syntax and fewer features.",
  "/wiki/PDP-11": "The PDP-11 is a series of 16-bit minicomputers sold by Digital Equipment Corporation (DEC) from 1970 into the 1990s, one of a succession of products in the PDP series. In total, around 600,000 PDP-11s of all models were sold, making it one of DEC's most successful product lines. The PDP-11 is considered by some experts to be the most popular minicomputer ever. The PDP-11 included a number of innovative features in its instruction set and additional general-purpose registers that made it much easier to program than earlier models in the PDP series. Additionally, the innovative Unibus system allowed external devices to be easily interfaced to the system using direct memory access, opening the system to a wide variety of peripherals. The PDP-11 replaced the PDP-8 in many real-time applications, although both product lines lived in parallel for more than 10 years. The ease of programming of the PDP-11 made it very popular for general-purpose computing uses as well. The design of the PDP-11 inspired the design of late-1970s microprocessors including the Intel x86 and the Motorola 68000.",
  "/wiki/Vasm": "vasm is a free assembler supporting various CPUs and many different output formats.\n CPUs officially supported by vasm include M680x0 family, ColdFire family, 80x86 family, PowerPC, ARM family, Z80 family, C16x/ST10, 6502 etc. Vasm supports Standard MIT (GNU-as style), Motorola/Freescale 68k (Devpac compatible) and Old 8-bit style syntax flavours. Output file formats include ELF, a.out, Amiga hunk format, Atari TOS/MiNT executable format, EHF extended hunk format, Raw, binary output, Motorola S-record format, VOBJ proprietary versatile object format, Test and debugging output.",
  "/wiki/Motorola_6800_family": "The 6800 family of 8-bit microprocessors (\u00b5Ps) and microcontrollers (\u00b5Cs) is based upon the Motorola 6800 CPU. The architecture also inspired the MOS Technology 6502, and that company started in the microprocessor business producing 6800 replacements.\n The chips primarily competed against Intel's 8-bit family of chips (such as the 8080, or their relations, the ZiLOG Z80 range).",
  "/wiki/GPUTILS": "GPUTILS (frequently written gputils) is a GPL-licensed set of tools for the PIC microcontroller, comprising an assembler, disassembler, linker, and object file viewer. It is available for various flavors of Unix, Mac OS X, and Microsoft Windows.",
  "/wiki/GNU_General_Public_License": "The GNU General Public License (GNU GPL or GPL) is a widely used free software license that guarantees end users the freedom to run, study, share, and modify the software. The license was originally written by Richard Stallman, former head of the Free Software Foundation (FSF), for the GNU Project, and grants the recipients of a computer program the rights of the Free Software Definition. The GPL is a copyleft license, which means that derivative work must be distributed under the same or equivalent license terms. This is in distinction to permissive software licenses, of which the BSD licenses and the MIT License are widely-used less-restrictive examples. GPL was the first copyleft license for general use. Historically, the GPL license family has been one of the most popular software licenses in the free and open-source software domain. Prominent free-software programs licensed under the GPL include the Linux kernel and the GNU Compiler Collection (GCC). David A. Wheeler argues that the copyleft provided by the GPL was crucial to the success of Linux-based systems, giving the programmers who contributed to the kernel the assurance that their work would benefit the whole world and remain free, rather than being exploited by software companies that would not have to give anything back to the community.",
  "/wiki/PIC_microcontroller": "PIC (usually pronounced as pick) is a family of microcontrollers made by Microchip Technology, derived from the PIC1650  originally developed by General Instrument's Microelectronics Division. The name PIC initially referred to Peripheral Interface Controller,\nand is currently expanded as Programmable Intelligent Computer. The first parts of the family were available in 1976; by 2013 the company had shipped more than twelve billion individual parts, used in a wide variety of embedded systems. Early models of PIC had read-only memory (ROM) or field-programmable EPROM for program storage, some with provision for erasing memory. All current models use flash memory for program storage, and newer models allow the PIC to reprogram itself. Program memory and data memory are separated. Data memory is 8-bit, 16-bit, and, in latest models, 32-bit wide. Program instructions vary in bit-count by family of PIC, and may be 12, 14, 16, or 24 bits long.",
  "/wiki/MIPS_architecture": "MIPS (Microprocessor without Interlocked Pipelined Stages) is a reduced instruction set computer (RISC) instruction set architecture (ISA):A-1:19 developed by MIPS Computer Systems, now MIPS Technologies, based in the United States. There are multiple versions of MIPS: including MIPS I, II, III, IV, and V; as well as five releases of MIPS32/64 (for 32- and 64-bit implementations, respectively). The early MIPS architectures were 32-bit only; 64-bit versions were developed later. As of April 2017, the current version of MIPS is MIPS32/64 Release 6. MIPS32/64 primarily differs from MIPS I\u2013V by defining the privileged kernel mode System Control Coprocessor in addition to the user mode architecture. The MIPS architecture has several optional extensions. MIPS-3D which is a simple set of floating-point SIMD instructions dedicated to common 3D tasks, MDMX (MaDMaX) which is a more extensive integer SIMD instruction set using the 64-bit floating-point registers, MIPS16e which adds compression to the instruction stream to make programs take up less room, and MIPS MT, which adds multithreading capability. Computer architecture courses in universities and technical schools often study the MIPS architecture.",
  "/wiki/Symbolic_Optimal_Assembly_Program": "The IBM 650 Magnetic Drum Data-Processing Machine is an early digital computer produced by IBM Corporation in the mid-1950s. The first one was installed in late 1954 and it was the most-popular computer for the next 5 years. It was announced in 1953 and in 1956 enhanced as the IBM 650 RAMAC with the addition of up to four disk storage units. Almost 2,000 systems were produced, the last in 1962. Support for the 650 and its component units was withdrawn in 1969. The 650 was a two-address, bi-quinary coded decimal computer (both data and addresses were decimal), with memory on a rotating magnetic drum. Character support was provided by the input/output units converting punched card alphabetical and special character encodings to/from a two-digit decimal code. The 650 was marketed to business, scientific and engineering users as well as to users of punched card machines who were upgrading from calculating punches, such as the IBM 604, to computers.",
  "/wiki/IBM_650": "The IBM 650 Magnetic Drum Data-Processing Machine is an early digital computer produced by IBM Corporation in the mid-1950s. The first one was installed in late 1954 and it was the most-popular computer for the next 5 years. It was announced in 1953 and in 1956 enhanced as the IBM 650 RAMAC with the addition of up to four disk storage units. Almost 2,000 systems were produced, the last in 1962. Support for the 650 and its component units was withdrawn in 1969. The 650 was a two-address, bi-quinary coded decimal computer (both data and addresses were decimal), with memory on a rotating magnetic drum. Character support was provided by the input/output units converting punched card alphabetical and special character encodings to/from a two-digit decimal code. The 650 was marketed to business, scientific and engineering users as well as to users of punched card machines who were upgrading from calculating punches, such as the IBM 604, to computers.",
  "/wiki/Autocoder": "Autocoder was the name given to certain assemblers for a number of IBM computers of the 1950s and 1960s.\nThe first Autocoders appear to have been the earliest assemblers to provide a macro facility.",
  "/wiki/IBM_700/7000_series": "The IBM 700/7000 series is a series of large-scale (mainframe) computer systems that were made by IBM through the 1950s and early 1960s. The series includes several different, incompatible processor architectures. The 700s use vacuum-tube logic and were made obsolete by the introduction of the transistorized 7000s. The 7000s, in turn, were eventually replaced with System/360, which was announced in 1964. However the 360/65, the first 360 powerful enough to replace 7000s, did not become available until November 1965. Early problems with OS/360 and the high cost of converting software kept many 7000s in service for years afterward.",
  "/wiki/IBM_1401": "The IBM 1401 is a variable-wordlength decimal computer that was announced by IBM on October 5, 1959. The first member of the highly successful IBM 1400 series, it was aimed at replacing unit record equipment for processing data stored on punched cards and at providing peripheral services for larger computers. The 1401 is considered to be the Model-T Ford of the computer industry, because it was mass-produced and because of its sales volume. Over 12,000 units were produced and many were leased or resold after they were replaced with newer technology. The 1401 was withdrawn on February 8, 1971.",
  "/wiki/IBM_1410": "The IBM 1410, a member of the IBM 1400 series, was a variable wordlength decimal computer that was announced by IBM on September 12, 1960 and marketed as a midrange Business Computer. It was withdrawn on March 30, 1970.",
  "/wiki/IBM_7010": "The IBM 700/7000 series is a series of large-scale (mainframe) computer systems that were made by IBM through the 1950s and early 1960s. The series includes several different, incompatible processor architectures. The 700s use vacuum-tube logic and were made obsolete by the introduction of the transistorized 7000s. The 7000s, in turn, were eventually replaced with System/360, which was announced in 1964. However the 360/65, the first 360 powerful enough to replace 7000s, did not become available until November 1965. Early problems with OS/360 and the high cost of converting software kept many 7000s in service for years afterward.",
  "/wiki/IBM_7070": "IBM 7070 was a decimal architecture intermediate data processing system that was introduced by IBM in 1958. It was part of the IBM 700/7000 series, and was based on discrete transistors rather than the vacuum tubes of the 1950s. It was the company's first transistorized stored-program computer. The 7070 was expected to be a common successor to at least the 650 and the 705. The 7070 was not designed to be instruction set compatible with the 650, as the latter had a second jump address in every instruction to allow optimal use of the drum, something unnecessary and wasteful in a computer with random-access core memory. As a result, a simulator was needed to run old programs. The 7070 was also marketed as an IBM 705 upgrade, but failed miserably due to its incompatibilities, including an inability to fully represent the 705 character set; forcing IBM to quickly introduce the IBM 7080 as a transistorized IBM 705 that was fully compatible. The 7070 series stored data in words containing 10 decimal digits plus a sign.",
  "/wiki/IBM_7072": "IBM 7070 was a decimal architecture intermediate data processing system that was introduced by IBM in 1958. It was part of the IBM 700/7000 series, and was based on discrete transistors rather than the vacuum tubes of the 1950s. It was the company's first transistorized stored-program computer. The 7070 was expected to be a common successor to at least the 650 and the 705. The 7070 was not designed to be instruction set compatible with the 650, as the latter had a second jump address in every instruction to allow optimal use of the drum, something unnecessary and wasteful in a computer with random-access core memory. As a result, a simulator was needed to run old programs. The 7070 was also marketed as an IBM 705 upgrade, but failed miserably due to its incompatibilities, including an inability to fully represent the 705 character set; forcing IBM to quickly introduce the IBM 7080 as a transistorized IBM 705 that was fully compatible. The 7070 series stored data in words containing 10 decimal digits plus a sign.",
  "/wiki/IBM_7074": "IBM 7070 was a decimal architecture intermediate data processing system that was introduced by IBM in 1958. It was part of the IBM 700/7000 series, and was based on discrete transistors rather than the vacuum tubes of the 1950s. It was the company's first transistorized stored-program computer. The 7070 was expected to be a common successor to at least the 650 and the 705. The 7070 was not designed to be instruction set compatible with the 650, as the latter had a second jump address in every instruction to allow optimal use of the drum, something unnecessary and wasteful in a computer with random-access core memory. As a result, a simulator was needed to run old programs. The 7070 was also marketed as an IBM 705 upgrade, but failed miserably due to its incompatibilities, including an inability to fully represent the 705 character set; forcing IBM to quickly introduce the IBM 7080 as a transistorized IBM 705 that was fully compatible. The 7070 series stored data in words containing 10 decimal digits plus a sign.",
  "/wiki/IBM_7080": "The IBM 7080 was a variable word length BCD transistor computer in the IBM 700/7000 series commercial architecture line, introduced in August 1961, that provided an upgrade path from the vacuum tube IBM 705 computer.\n The 7080 weighed about 19,700 pounds (9.9 short tons; 8.9 t).\n After the introduction of the IBM 7070, in June 1960, as an upgrade path for both the IBM 650 and IBM 705 computers, IBM realized that it was so incompatible with the 705 that few users of that system wanted to upgrade to the 7070. That prompted the development of the 7080, which was fully compatible with all models of the 705 and added many improvements.",
  "/wiki/FORTRAN_Assembly_Program": "The IBM 700/7000 series is a series of large-scale (mainframe) computer systems that were made by IBM through the 1950s and early 1960s. The series includes several different, incompatible processor architectures. The 700s use vacuum-tube logic and were made obsolete by the introduction of the transistorized 7000s. The 7000s, in turn, were eventually replaced with System/360, which was announced in 1964. However the 360/65, the first 360 powerful enough to replace 7000s, did not become available until November 1965. Early problems with OS/360 and the high cost of converting software kept many 7000s in service for years afterward.",
  "/wiki/IBM_709": "The IBM 709 was a computer system, initially announced by IBM in January 1957 and first installed during August 1958. The 709 was an improved version of its predecessor, the IBM 704, and  was the third of the IBM 700/7000 series of scientific computers. The improvements included overlapped input/output, indirect addressing, and three convert instructions which provided support for decimal arithmetic, leading zero suppression, and several other operations. The 709 had 32,768 words of 36-bit magnetic core memory and could execute 42,000 add or subtract instructions per second. It could multiply two 36-bit integers at a rate of 5000 per second. An optional hardware emulator executed legacy IBM 704 programs on the IBM 709. This was the first commercially available emulator. Registers and most 704 instructions were emulated in 709 hardware.",
  "/wiki/IBM_7040": "The IBM 7040 was a historic but short-lived model of transistor computer built in the 1960s.",
  "/wiki/IBM_7090": "The IBM 7090 is a second-generation transistorized version of the earlier IBM 709 vacuum tube mainframe computer that was designed for large-scale scientific and technological applications. The 7090 is the fourth member of the IBM 700/7000 series scientific computers. The first 7090 installation was in December 1959. In 1960, a typical system sold for $2.9 million (equivalent to $19 million in 2019) or could be rented for $63,500 a month (equivalent to $421,000 in 2018).\n The 7090 uses a 36-bit word length, with an address space of 32,768 words (15-bit addresses). It operates with a basic memory cycle of 2.18 \u03bcs, using the IBM 7302 Core Storage core memory technology from the IBM 7030 (Stretch) project.\n With a processing speed of around 100 Kflop/s, the 7090 is six times faster than the 709, and could be rented for half the price.",
  "/wiki/History_of_IBM_mainframe_operating_systems": "The history of operating systems running on IBM mainframes is a notable chapter of history of mainframe operating systems, because of IBM's long-standing position as the world's largest hardware supplier of mainframe computers.\n Arguably the operating systems which IBM supplied to customers for use on its early mainframes have seldom been very innovative, except for the virtual machine systems beginning with CP-67. But the company's well-known reputation for preferring proven technology has generally given potential users the confidence to adopt new IBM systems fairly quickly. IBM's current mainframe operating systems, z/OS, z/VM, z/VSE, and z/TPF, are backward compatible successors to operating systems introduced in the 1960s, although of course they have been improved in many ways.\n Both IBM-supplied operating systems and those supplied by others are discussed here, if notably used on IBM mainframes.",
  "/wiki/IBM_7090/94_IBSYS": "IBSYS is the discontinued tape-based operating system that IBM supplied with its IBM 7090 and IBM 7094 computers. A similar operating system (but with several significant differences), also called IBSYS, was provided with IBM 7040 and IBM 7044 computers. IBSYS was based on FORTRAN Monitor System (FMS) and (more likely) Bell Labs' BESYS rather than the  SHARE Operating System.\n IBSYS itself is a resident monitor program, that reads control card images placed between the decks of program and data cards of individual jobs. An IBSYS control card begins with a $ in column 1, immediately followed by a Control Name that selects the various IBSYS utility programs needed to set up and run the job. These card deck images are read from magnetic tapes prepared offline, not usually directly from the punched card reader.",
  "/wiki/GE-600_series": "The 600 series used 36-bit words and 18-bit addresses. They had two 36-bit accumulators, eight 18-bit index registers, and one 8-bit exponent register. \nIt supported floating point in both 36-bit single-precision and 2 x 36-bit double precision, the exponent being stored separately, allowing up to 71 bits of precision (one bit being used for the sign). It had an elaborate set of addressing modes, many of which used indirect words, some of which were auto-incrementing or auto-decrementing. It supported 6-bit and 9-bit bytes through addressing modes; these supported extracting specific bytes, and incrementing the byte pointer, but not random access to bytes.\n It also included a number of channel controllers for handling I/O. The CPU could hand off short programs written in the channel controller's own machine language, which would then process the data, move it to or from the memory, and raise an interrupt when they completed. This allowed the main CPU to move on to other tasks while waiting for the slow I/O to complete, a primary feature of time sharing systems.",
  "/wiki/Honeywell_6000_series": "The Honeywell 6000 series computers were rebadged versions of General Electric's 600-series mainframes manufactured by Honeywell International, Inc. from 1970 to 1989. Honeywell acquired the line when it purchased GE's computer division in 1970 and continued to develop them under a variety of names for many years. The high-end model was the 6080, with performance approximately 1 MIPS. Smaller models were the 6070,  6060, 6050, 6040, and 6030. In 1973 a low-end 6025 was introduced. The even-numbered models included an Enhanced Instruction Set feature (EIS), which added decimal arithmetic and storage-to-storage operations to the original word-oriented architecture. In 1973 Honeywell introduced the 6180, a 6000-series machine with addressing modifications to support the Multics operating system. In 1974 Honeywell released the 68/80 which added cache memory in each processor and support for a large (2-8 million word) directly addressable memory.",
  "/wiki/General_Comprehensive_Operating_System": "General Comprehensive Operating System (GCOS, /\u02c8d\u0292i\u02d0ko\u028as/; originally GECOS, General Electric Comprehensive Operating Supervisor) is a family of operating systems oriented toward the 36-bit GE/Honeywell mainframe computers.\n The original version of GCOS was developed by General Electric from 1962. The operating system is still used today in its most recent versions (GCOS 7 and GCOS 8) on servers and mainframes produced by Groupe Bull, primarily through emulation, to provide continuity with legacy mainframe environments. Note that GCOS 7 and GCOS 8 are separate branches of the operating system and continue to be developed alongside each other.",
  "/wiki/SDS_Sigma_series": "The SDS Sigma series is a series of third generation computers that were introduced by Scientific Data Systems in 1966. The first machines in the series are the 16-bit Sigma 2 and the 32-bit Sigma 7; the Sigma 7 was the first 32-bit computer released by SDS. At the time the only competition for the Sigma 7 was the IBM 360. Memory size increments for all SDS/XDS/Xerox computers are stated in kWords, not kBytes. For example, the Sigma 5 base memory is 16K 32-Bit words (64K Bytes). Maximum memory is limited by the length of the instruction address field of 17 bits, or 128K Words (512K Bytes). Although this is a trivial amount of memory in today's  technology, Sigma systems performed their tasks exceptionally well, and few were deployed with, or needed, the maximum 128K Word memory size. The Xerox 500 series computers, introduced starting in 1973, are compatible upgrades to the Sigma systems using newer technology.",
  "/wiki/Universal_Time-Sharing_System": "The Universal Time-Sharing System (UTS) is a discontinued operating system for the XDS Sigma series of computers, succeeding Batch Processing Monitor (BPM)/Batch Time-Sharing Monitor (BTM).  UTS was announced in 1966, but because of delays did not actually ship until 1971.  It was designed to provide multi-programming services for online (interactive) user programs in addition to batch-mode production jobs, symbiont (spooled) I/O, and critical real-time processes.  System Daemons, called ghost jobs were used to run monitor code in user space. The final release, D00, shipped in January, 1973.  It was succeeded by the CP-V operating system, which combined UTS with the heavily batch-oriented Xerox Operating System (XOS).",
  "/wiki/Symbolic_Assembly_Program": "The Symbolic Assembly Program (SAP) is an assembler program for the IBM 704 computer. It was written by Roy Nutt at United Aircraft Corporation, and was distributed by the SHARE user's group beginning in 1956 as the Share Assembly Program. SAP succeeded an earlier program called NYAP1 (New York Assembly Program 1), which it closely resembled, and became the standard assembler for 704 users. It set the external form of an assembly language that was to be a model for all its successors and which persists almost unchanged to the present day.",
  "/wiki/IBM_704": "The IBM 704, introduced by IBM in 1954, is the first mass-produced computer with floating-point arithmetic hardware. The IBM 704 Manual of operation states:",
  "/wiki/Symbolic_Programming_System": "The IBM 1401 Symbolic Programming System (SPS) was an assembler that was developed by Gary Mokotoff, IBM Applied Programming Department, for the IBM 1401 computer, the first of the IBM 1400 series.  One source indicates that This programming system was announced by IBM with the machine. \n SPS-1 could run on a low-end machine with 1.4K memory, SPS-2 required at least 4K memory.",
  "/wiki/IBM_1620": "The IBM 1620 was announced by IBM on October 21, 1959, and marketed as an inexpensive scientific computer. After a total production of about two thousand machines, it was withdrawn on November 19, 1970. Modified versions of the 1620 were used as the CPU of the IBM 1710 and IBM 1720 Industrial Process Control Systems (making it the first digital computer considered reliable enough for real-time process control of factory equipment).\n Being variable-word-length decimal, as opposed to fixed-word-length pure binary, made it an especially attractive first computer to learn on \u2013  and hundreds of thousands of students had their first experiences with a computer on the IBM 1620.\n Core memory cycle times were 20 microseconds for the (earlier) Model I, 10 microseconds for the Model II (about a thousand times slower than typical computer main memory in 2006). The Model II was introduced in 1962.",
  "/wiki/IBM_1710": "The IBM 1710 was a process control system that IBM introduced in March 1961. It used either a 1620 I or a 1620 II Computer and specialized I/O devices (e.g., IBM 1711 A/D and D/A Converter, IBM 1712 Discrete I/O and Analog Multiplexer, factory floor operator control panels).\n The IBM 1620 used in the 1710 system was modified in several ways, the most obvious was the addition of a very primitive hardware interrupt mechanism.\n The 1710 was used by many[citation needed] paper mills, oil refineries and electric companies.",
  "/wiki/ICL_1900": "ICT 1900 was the name given to a series of mainframe computers released by International Computers and Tabulators (ICT) and later International Computers Limited (ICL) during the 1960s and '70s.  The 1900 series was notable for being one of the few non-American competitors to the IBM System/360, enjoying significant success in the European and British Commonwealth markets.",
  "/wiki/GEORGE_(operating_system)": "GEORGE was the name given to a series of operating systems released by International Computers and Tabulators (ICT) in the 1960s, for the ICT 1900 series of computers. These included GEORGE 1, GEORGE 2, GEORGE 3, and GEORGE 4. Initially the 1900 series machines, like the Ferranti-Packard 6000 on which they were based, ran a simple operating system known as executive which allowed the system operator to load and run programs from a Teletype Model 33 ASR based system console. In December 1964 ICT set up an Operating Systems Branch to develop a new operating system for the 1906/7. The branch was initially staffed with people being released by the end of work on the OMP operating system for the Ferranti Orion. The initial design of the new system, named George after George E. Felton head of the Basic Programming Division, was based on ideas from the Orion and the spooling system of the Atlas computer. (In public it was claimed that George stood for GEneral ORGanisational Environment, but contemporary sources say that was a backronym). In July 1965 a team from ICT was present at a seminar at NPL describing the CTSS operating system developed for MIT's Project MAC.",
  "/wiki/Comparison_of_assemblers": "This is a list of assemblers: computer programs that translate assembly language source code into binary programs. Some assemblers are components of a compiler system for a high level language and may have limited or no usable functionality outside of the compiler system.  Some assemblers are hosted on the target processor and operating system, while other assemblers (cross-assemblers) may run under  an unrelated operating system or processor.  For example, assemblers for embedded systems are not usually hosted on the target system since it would not have the storage and terminal I/O to permit entry of a program from a keyboard. An assembler may have a single target processor or may have options to support multiple processor types. Very simple assemblers may lack features, such as macros, present in more powerful versions."
}